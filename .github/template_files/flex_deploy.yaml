name: Deploy Flex

on:
  # Run on merge to main
  #push:
  #  branches:
  #  - main

  # Enable running this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      environment:
        required: true
        type: environment
        description: 'Environment to run tests against'

jobs:
  deploy-serverless:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    env:
      ENVIRONMENT: ${{ github.event.inputs.environment }}
      TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
      TWILIO_API_KEY: ${{ secrets.TWILIO_API_KEY }}
      TWILIO_API_SECRET: ${{ secrets.TWILIO_API_SECRET }}
    steps:
      - uses: actions/checkout@v3
      - name: setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: install npm and apply missing environment variables
        run: |
          npm install
          npm run populate-missing-placeholders $ENVIRONMENT
      - name: install npm and build video-app-assets
        working-directory: web-app-examples/video-app-quickstart
        run: |
          npm install
          npm run build
      - name: deploy serverless
        working-directory: serverless-functions
        run: |
          npm install
          npm run install-serverless-plugin
          npm run deploy:$ENVIRONMENT

  deploy-schedule-manager:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    env:
      ENVIRONMENT: ${{ github.event.inputs.environment }}
      TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
      TWILIO_API_KEY: ${{ secrets.TWILIO_API_KEY }}
      TWILIO_API_SECRET: ${{ secrets.TWILIO_API_SECRET }}
    steps:
      - uses: actions/checkout@v3
      - name: setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: install top-level packages
        run: |
          npm install
      - name: deploy serverless-schedule-manager
        working-directory: serverless-schedule-manager
        run: |
          npm install
          npm run install-serverless-plugin
          npm run deploy:$ENVIRONMENT

  deploy-terraform:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    env:
      ENVIRONMENT: ${{ github.event.inputs.environment }}
      DISABLE_TERRAFORM: ${{vars.DISABLE_TERRAFORM || 'false' }}
      TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
      TWILIO_API_KEY: ${{ secrets.TWILIO_API_KEY }}
      TWILIO_API_SECRET: ${{ secrets.TWILIO_API_SECRET }}
      TF_VAR_TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
      TF_VAR_TWILIO_API_KEY: ${{ secrets.TWILIO_API_KEY }}
      TF_VAR_TWILIO_API_SECRET: ${{ secrets.TWILIO_API_SECRET }}
    needs: [deploy-serverless, deploy-schedule-manager]
    steps:
      - uses: actions/checkout@v1 
        if: env.DISABLE_TERRAFORM != 'true'
      - uses: ./.github/actions/terraform_state_artifact
        if: env.DISABLE_TERRAFORM != 'true'
        with:
          encryptionkey: ${{ secrets.TF_ENCRYPTION_KEY }}
          path: ./infra-as-code/terraform/environments/default

  ####################################################
  ### NOTE: This job can be removed after the first 
  ### successful deploy it is required to align
  ### serverless hostname with terraform and then 
  ### sids from terraform deploy back with serverless
  #####################################################
  deploy-serverless-post-terraform:
    environment: ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: ${{ github.event.inputs.environment }}
      TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
      TWILIO_API_KEY: ${{ secrets.TWILIO_API_KEY }}
      TWILIO_API_SECRET: ${{ secrets.TWILIO_API_SECRET }}
    needs: [deploy-terraform]
    steps:
      - uses: actions/checkout@v3
      - name: setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: install npm and apply missing environment variables
        run: |
          npm install
          npm run populate-missing-placeholders $ENVIRONMENT
      - name: install npm and build video-app-assets
        working-directory: web-app-examples/video-app-quickstart
        run: |
          npm install
          npm run build
      - name: deploy serverless
        working-directory: serverless-functions
        run: |
          npm install
          npm run install-serverless-plugin
          npm run deploy:$ENVIRONMENT

  deploy-flex-config:
    environment: ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT:  ${{ github.event.inputs.environment }}
      TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
      TWILIO_API_KEY: ${{ secrets.TWILIO_API_KEY }}
      TWILIO_API_SECRET: ${{ secrets.TWILIO_API_SECRET }}
      OVERWRITE_CONFIG: ${{ vars.OVERWRITE_CONFIG }}
    needs: [deploy-serverless, deploy-schedule-manager]
    steps:
      - uses: actions/checkout@v3
      - name: setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: install npm and apply missing environment variables
        run: |
          npm install
          npm run populate-missing-placeholders $ENVIRONMENT
    
      - name: deploy flex config
        working-directory: flex-config
        run: |
          npm install
          npm run deploy:$ENVIRONMENT

  deploy-release-plugin:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    env:
      TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
      TWILIO_API_KEY: ${{ secrets.TWILIO_API_KEY }}
      TWILIO_API_SECRET: ${{ secrets.TWILIO_API_SECRET }}
      PLUGIN_FOLDER: plugin-flex-ts-template-v2
    steps:
      - uses: actions/checkout@v3
      - name: setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          
      - name: install twilio cli
        run: npm install skip-postinstall

      - name: deploy and release flex-plugin
        run: |
          cd $PLUGIN_FOLDER
          npm install
          npm run install-flex-plugin
          npm run deploy -- --changelog="Deploy from CI/CD for commit ${{ github.sha }}"
          npm run release -- --name="Release from CI/CD for commit ${{ github.sha }}" --description="Release from CI/CD for commit ${{ github.sha }}"
