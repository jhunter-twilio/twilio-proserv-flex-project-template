on:
  push:
    branches:
      - 'main'
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
    secrets:
      TWILIO_ACCOUNT_SID:
        required: true
      TWILIO_API_KEY:
        required: true
      TWILIO_API_SECRET:
        required: true
      TF_ENCRYPTION_KEY:
        required: true

  workflow_dispatch:
    inputs:
      environment:
        required: true
        type: environment
        description: "Environment to use for deployment"

jobs:
  terraform_deploy:
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    name: Deploy Terraform
    env:
      ENCRYPTION_KEY: ${{ secrets.TF_ENCRYPTION_KEY }}
      TF_STATE_FILES: ".terraform.lock.hcl|terraform.tfstate"
      TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
      ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
      TWILIO_API_KEY: ${{ secrets.TWILIO_API_KEY }}
      TWILIO_API_SECRET: ${{ secrets.TWILIO_API_SECRET }}
      TF_VAR_TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
      TF_VAR_TWILIO_API_KEY: ${{ secrets.TWILIO_API_KEY }}
      TF_VAR_TWILIO_API_SECRET: ${{ secrets.TWILIO_API_SECRET }}
      ENVIRONMENT: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
      - name: setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: install Twilio CLI
        run: |
          npm install -g twilio-cli
          twilio plugins:install @twilio-labs/plugin-serverless
      - name: Detect serverless projects
        working-directory: ./infra-as-code/util
        run: |
          npm i
          npm run buildServiceManifest -- --servicesRoot=../../services
          echo "## Services" >> $GITHUB_STEP_SUMMARY
          echo "### Services Manifest" >> $GITHUB_STEP_SUMMARY 
          cat ../../services/services-manifest.yaml >> $GITHUB_STEP_SUMMARY
          echo "### Missing env vars" >> $GITHUB_STEP_SUMMARY
          grep missing ../../services/services-manifest.yaml >> $GITHUB_STEP_SUMMARY
      - name: Build serverless projects
        env:
          CI: false
        working-directory: ./services
        run: |
          for service_folder in */; do \
            if [ -d "$service_folder" ]; then
              echo "### $service_folder" >> $GITHUB_STEP_SUMMARY; \
              cd $service_folder && yarn && yarn build \
                || echo "- No build script detected for $service_folder" >> $GITHUB_STEP_SUMMARY; \
            fi; \
          done
      - name: Pull Terraform State
        id: pull-state
        working-directory: ./infra-as-code/state
        run: |
          ./pull_state.sh
      - name: Import Internal State
        run: |
          ./import_internal_state.sh
        if: steps.pull-state.outputs.JOB_FAILED == 'true'
        working-directory: ./infra-as-code/state
        id: import_internal_state
      - name: Export State
        run: |
          ./push_state.sh
        working-directory: ./infra-as-code/state
        if: steps.import_internal_state.outputs.JOB_FAILED == 'false'
